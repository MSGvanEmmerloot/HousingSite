@page "/test"

@using HousingSite.Data
@inherits TestingRazorClass

<table>
    <thead>
        <tr>
            <th>#</th>
            <th>Enable</th>
            <th>Color</th>
            <th>Parameter</th>
            <th>Condition</th>
            <th>Value</th>
            @*<th></th>
            <th>Value2</th>*@
        </tr>
    </thead>
    <tbody>
        @for (int r = 0; r < ruleParams2.Count; r++)
        {
            var cur = r;
        <tr>
            @*<td>@ruleParams2[cur].sequenceNumber</td>*@
            <td><input type="number" value=@ruleParams2[cur].sequenceNumber @onchange="(e => ShiftRuleParamList(ruleParams2[cur], Int32.Parse(e.Value.ToString())))" style="width:50px" /></td>
            <td>
                @if (@ruleParams2[cur].apply == true)
                {
                    <span>Yes</span>
                }
            </td>
            <td>
                <select id="select-box" @bind="@ruleParams2[cur].color">
                    @for (int m = 0; m < colorStrings.Length; m++)
                    {
                        var c = m;
                        <option value=@((ColorOptions)c)>@colorStrings[c]</option>
                    }
                </select>
            </td>
            <td>
                <select id="select-box" @bind="@ruleParams2[cur].parameter">
                    @for (int m = 0; m < ruleParamStrings.Length; m++)
                    {
                        var c = m;
                        <option value=@((RuleParamOptions)c)>@ruleParamStrings[c]</option>
                    }
                </select>
            </td>
            <td>
                <select id="select-box" @bind="@ruleParams2[cur].condition">
                    @for (int m = 0; m < conditionStrings.Length; m++)
                    {
                        var c = m;
                        <option value=@((ConditionOptions)c)>@conditionStrings[c]</option>
                    }
                </select>
            </td>
            <td>
                @if (@ruleParams2[cur].condition == ConditionOptions.between)
                {
                    <input type="number" @bind="ruleParams2[cur].borderVal1" style="width:50px" /> <span>and</span> <input type="number" @bind="ruleParams2[cur].borderVal2" style="width:50px" />
                }
                else
                {
                    <input type="number" @bind="ruleParams2[cur].borderVal1" style="width:50px" />
                }
            </td>
            @*<td><input type="number" @bind="ruleParams2[cur].borderVal1" style="width:50px" /></td>
        <td>and</td>
        <td><input type="number" @bind="ruleParams2[cur].borderVal2" style="width:50px" /></td>*@
        </tr>
        }
        @*<tr>
                <td>Price</td>
                <td>@sign1</td>
                <td><input type="number" @bind="borderVal1" /></td>
                <td>@sign2</td>
                <td><input type="number" @bind="borderVal2" /></td>
                <td>@sign3</td>
                <td><button class="btn btn-primary" @onclick="@(() => Validate())">Validate</button></td>
            </tr>*@
    </tbody>
</table>
<input type="number" @bind="testPrice" style="width:50px" />
<input type="number" @bind="testArea" style="width:50px" />
<select id="select-box" @bind="@defaultColor">
    @for (int m = 0; m < colorStrings.Length; m++)
    {
        var c = m;
        <option value=@((ColorOptions)c)>@colorStrings[c]</option>
    }
</select>
<button class="btn btn-primary" @onclick="@(() => CheckResultValue())">Test</button>

@*<table>
    <thead>
        <tr>
            <th></th>
            <th>Green</th>
            <th></th>
            <th>Yellow</th>
            <th></th>
            <th>Red</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @for (int r = 0; r < ruleParams.Count; r++)
        {
            var cur = r;
        <tr>
            <td>
                @if (@ruleParams[cur].apply == true)
                {
                    <span>@ruleParamStrings[cur] (in use)</span>
                }
                else
                {
                    <span>@ruleParamStrings[cur]</span>
                }
            </td>
            <td>@ruleParams[cur].sign1</td>
            <td><input type="number" @bind="ruleParams[cur].borderVal1" style="width:50px"/></td>
            <td>@ruleParams[cur].sign2</td>
            <td><input type="number" @bind="ruleParams[cur].borderVal2" style="width:50px"/></td>
            <td>@ruleParams[cur].sign3</td>
            <td>
                @if (@ruleParams[cur].apply == true)
                {
                    <button class="btn btn-primary" @onclick="@(() => Validate(cur))">Update this rule</button>
                }
                else
                {
                    <button class="btn btn-primary" @onclick="@(() => Validate(cur))">Validate and use this rule</button>
                }

                @if (@ruleParams[cur].parameter == RuleParamOptions.price)
                {
                    <button class="btn btn-primary" @onclick="@(() => SetDefaultValues(cur))">Set default values</button>
                }
            </td>
        </tr>
        }
        @*<tr>
            <td>Price</td>
            <td>@sign1</td>
            <td><input type="number" @bind="borderVal1" /></td>
            <td>@sign2</td>
            <td><input type="number" @bind="borderVal2" /></td>
            <td>@sign3</td>
            <td><button class="btn btn-primary" @onclick="@(() => Validate())">Validate</button></td>
        </tr>@
        </tbody>
    </table>*@

    @*<div class="progress">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow=@progress1 aria-valuemin="0" aria-valuemax="100" style="width: @progress1%"></div>
        </div>
        <div class="progress">
            <div class="progress-bar" role="progressbar" aria-valuenow=@progress2 aria-valuemin="0" aria-valuemax="100" style="width: @progress2%"></div>
        </div>*@

    @*<button class="btn btn-primary" @onclick="@(() => Testing())">Test</button>*@
    @*<TestComponent />*@